input_grid = [];
function solution = Sudoku_Solver(input_grid)
solution = input_grid;
submatA = input_grid[1:3, 1:3];
submatB = input_grid[1:3, 4:6];
submatC = input_grid[1:3, 7:9];
submatD = input_grid[4:6, 1:3];
submatE = input_grid[4:6, 4:6];
submatF = input_grid[4:6, 7:9];
submatG = input_grid[7:9, 1:3];
submatH = input_grid[7:9, 4:6];
submatI = input_grid[7:9, 7:9];

row_count = 1;
column_count = 1;
counter = 1;
%%
for counter < 10
    for row_count < 10
        for column_count < 10
            if input_grid(row_count,:) ~= counter && input_grid(:,column_count) ~= counter
               for row_count < 4 && column_count < 4
                   if submatA(:,:) ~= counter
                       solution(row_count,column_count) = counter;
                   else
                       solution(row_count,column_count) = input_grid(row_count,column_count);
                   end
               end
               for row_count < 4 && column_count < 7 && column_count > 3
                   if submatB(:,:) ~= counter
                       solution(row_count,column_count) = counter;
                   else
                       solution(row_count,column_count) = input_grid(row_count,column_count);
                   end
               end
               for row_count < 4 && column_count > 6
                   if submatC(:,:) ~= counter
                       solution(row_count,column_count) = counter;
                   else
                       solution(row_count,column_count) = input_grid(row_count,column_count);
                   end
               end
               for row_count > 3 && row_count < 7 && column_count < 4
                   if submatD(:,:) ~= counter
                       solution(row_count,column_count) = counter;
                   else
                       solution(row_count,column_count) = input_grid(row_count,column_count);
                   end
               end
               for row_count > 3 && row_count < 7 && column_count < 7 && column_count > 3
                   if submatE(:,:) ~= counter
                       solution(row_count,column_count) = counter;
                   else
                       solution(row_count,column_count) = input_grid(row_count,column_count);
                   end
               end
               for row_count > 3 && row_count < 7 && column_count > 6
                   if submatF(:,:) ~= counter
                       solution(row_count,column_count) = counter;
                   else
                       solution(row_count,column_count) = input_grid(row_count,column_count);
                   end
               end
               for row_count > 6 && column_count < 4
                   if submatG(:,:) ~= counter
                       solution(row_count,column_count) = counter;
                   else
                       solution(row_count,column_count) = input_grid(row_count,column_count);
                   end
               end
               for row_count > 6 && column_count > 3 && column_count < 7
                   if submatH(:,:) ~= counter
                       solution(row_count,column_count) = counter;
                   else
                       solution(row_count,column_count) = input_grid(row_count,column_count);
                   end
               end
               for row_count > 6 && column_count > 6
                   if submatI(:,:) ~= counter
                       solution(row_count,column_count) = counter;
                   else
                       solution(row_count,column_count) = input_grid(row_count,column_count);
                   end
               end
end
